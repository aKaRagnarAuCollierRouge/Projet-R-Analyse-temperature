---
title: "Import et vérification des données de températures"
author: "Baptiste Trespaillé"
date: "17/05/2024"
format:
pdf:
toc: true
number-sections: true
editor: visual
---

# import packages

```{r}
library(tidyverse)
```

# importation des données

```{r}
donnees_temperature <-read_csv("donnees_temperature.csv",
col_type="ffdDdddfddff")
```

# Résumer des données

```{r}
glimpse(donnees_temperature)
```

# Valeurs manquantes

```{r}
naniar::gg_miss_upset(donnees_temperature)
```

# résumez les données sous forme de tableaux

```{r}
summary(donnees_temperature)

glimpse(donnees_temperature)
```

# Creation de la colonne densite_humaine_par_km_carre(en miller) , suppression autre colonne

```{r}
donnees_temperature <- donnees_temperature |>
mutate(densite_humaine_par_km_carre=densite_par_millier_habitants_km_carre_en_2018*1000) |>
select(-densite_par_millier_habitants_km_carre_en_2018)
```

# Vérification mise à jour

```{r}
glimpse(donnees_temperature)
donnees_temperature |> 
  distinct(departement, densite_humaine_par_km_carre)
```

# Création d'une colonne niveau densité de population

```{r}
donnees_temperature=donnees_temperature |>
  mutate(
    densite_pop=case_when(
      densite_humaine_par_km_carre >20000000 ~ "sur-peuplé",
      densite_humaine_par_km_carre >5000000 ~ "très peuplé",
      densite_humaine_par_km_carre > 50000 ~ "peuplé",
      TRUE ~ "peu peuplé"
    ))
  
  count(donnees_temperature, departement, densite_pop)
```

# remplacement des valeurs manquantes

## remplacement des longitudes

### vérification que les villes ont toujours les mêmes coordonnées

```{r}
donnees_temperature |> 
  filter(!is.na(longitude)) |> 
  distinct(chef_lieu, longitude, latitude) |> 
  count(chef_lieu) |> 
  filter(n > 1)
```

### table ville - coordonnees

```{r}
table_ville_coordonnees <- donnees_temperature |> 
  filter(!is.na(longitude)) |> 
  distinct(chef_lieu, longitude, latitude)

# jointure pour créer la nouvelle colonne corrigée
donnees_temperature_longitude_corr <- 
  inner_join(
    donnees_temperature,
    table_ville_coordonnees,
    by = join_by(chef_lieu, latitude),
    suffix = c(".origine", ".corrige")
  )

# vérification de la correction
donnees_temperature_longitude_corr |> 
  filter(is.na(longitude.origine))

# suppression de la colonne d'origine et renome la colonne corrigée
donnees_temperature <- donnees_temperature_longitude_corr |> 
  select(- longitude.origine) |> 
  rename(longitude = "longitude.corrige")

# vérification
naniar::gg_miss_upset(donnees_temperature)

```

## remplacement des températures manquantes

### tmoy

Je vais prendre la température moyenne des données adjacente et faire leur moyenne pour la mettre dans ma donnée manquante.

```{r}
# tri sur les données pour avoir les jour qui se suivent dans chaque departement
donnees_temperature <- arrange(donnees_temperature, departement, date_obs)

# recherche du numéro de ligne pour laquelle la température moyenne est manquante
num_ligne <- donnees_temperature |> 
  rowid_to_column() |> 
  filter(is.na(tmoy))

donnees_temperature[num_ligne$rowid, "tmoy"] <- mean(
  donnees_temperature[(num_ligne$rowid - 1),]$tmoy, donnees_temperature[(num_ligne$rowid + 1), ]$tmoy
)


# vérification
donnees_temperature |> 
  filter(is.na(tmoy))
```

### tmin

```{r}
# utilisation de lag() et lead()
donnees_temperature <- donnees_temperature |> 
  mutate(
    tmin = case_when(
      is.na(tmin) ~ (lag(tmin) + lead(tmin))/2,
      TRUE ~ tmin
    )
  )
    
# vérification
summary(donnees_temperature)

```

# Jeu de données sans valeurs manquantes

```{r}
write_csv(
  donnees_temperature, 
  "donnees_temperature_completees.csv"
  )

```
